import UIKit

extension UITableView {
    
    func dequeueReusableCell<T: UITableViewCell>(for indexPath: IndexPath) -> T? {
        guard let cell = dequeueReusableCell(withIdentifier: T.reuseIdentifier, for: indexPath) as? T else {
            return nil
        }
        return cell
    }
    
    func bindCell(named: String) {
        let nib = UINib(nibName: named, bundle: nil)
        self.register(nib, forCellReuseIdentifier: named+"Identifier")
    }
    
    func bindHeader(named: String) {
        let nibHeader = UINib(nibName: named, bundle: nil)
        self.register(nibHeader, forHeaderFooterViewReuseIdentifier: named)
    }

    func addBackgroundView(text: String, font: UIFont = UIFont.getFont(fontTypeEnum: .book, size: 14), textColor: UIColor = .black, backgroundColor: UIColor = .clear) {
        let emptyView = EmptyView.fromNib()
        emptyView.alpha = 0
        emptyView.frame = self.bounds
        emptyView.setUpMessageLabel(text: text, font: font, textColor: textColor, backgroundColor: backgroundColor)
        self.backgroundView = emptyView
        UIView.animate(withDuration: 1, animations: {
            emptyView.alpha = 1
        })
    }
    
    func resetBackgroundView() {
        let view = UIView()
        view.alpha = 0
        self.backgroundView = view
        UIView.animate(withDuration: 1, animations: {
            view.alpha = 1
        })
    }
}
